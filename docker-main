FROM ubuntu:focal
MAINTAINER Yu-Jye Tung

ARG DEBIAN_FRONTEND=noninteractive

### Privilege for some installations
USER root

### Install common necessary packages
RUN apt-get clean
RUN apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get -y install python3 python3-pip git 
RUN apt-get install -y build-essential && \
    apt-get update && \
    apt-get install -y vim \
                       libgmp-dev \
                       tar \
                       perl \
                       pkg-config \
                       autoconf \
                       automake \
                       graphviz \
                       libgnomecanvas2-dev \
                       libgtksourceview2.0-dev \
                       libgtk-3-dev \
                       m4 \
	               make \
                       cmake \
                       flex \
                       libboost-all-dev \
                       libboost-dev \
                       libboost-test-dev \
                       libboost-system-dev \
                       libc6 \
                       libc6-dev \
                       libstdc++6 \
                       llvm \
                       llvm-dev \
                       gcc-multilib \
	               gcc \
                       libffi-dev \
                       libz-dev \
                       software-properties-common \
                       clang \
                       jq \
                       wget \
                       time \
                       zlib1g-dev \
                       opam

### Install Rosette (Racket)
RUN mkdir /rosette-install
WORKDIR /rosette-install
# racket install script is too big to store in git
RUN wget https://download.racket-lang.org/installers/8.2/racket-8.2-x86_64-linux-cs.sh
RUN chmod 755 racket-8.2-x86_64-linux-cs.sh
RUN echo "yes\n1\n" | sh racket-8.2-x86_64-linux-cs.sh
RUN raco setup
RUN raco pkg install custom-load
RUN raco pkg install rfc6455
RUN raco pkg install rosette
# Get Rosette code
COPY ./installs/rosette/expr-gen.rkt /synthesis/
COPY ./installs/rosette/get_synthesis.sh /synthesis/

###  Install Frama-C
RUN opam init --disable-sandboxing --shell-setup
RUN eval $(opam env)
RUN opam install -y depext
RUN opam depext --install -y lablgtk3 lablgtk3-sourceview3
RUN eval $(opam env)
RUN opam depext --install -y frama-c
COPY ./installs/frama-c/prettyvsa.ml / 

# since my tool assume this working directory
WORKDIR /llvm-base/build
